@model IEnumerable<CoreLibraryProj.Book>
@using CoreLibraryProj.Models



@{
    ViewData["Title"] = "Перелік книг";
    Layout = null;
}


<head>
    
<title>Бібліотека</title>
<link rel="stylesheet" type="text/css" href="/css/BookList.css">
<link rel="stylesheet" type="text/css" href="/css/SidebarBookIndex.css">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Slab:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
</head>

@{
string displayornot = "";
string margins = "margin-bottom:19px;";
if (!User.IsInRole("admin") && !User.IsInRole("editor")) { displayornot = "display:none";margins = ""; }
}


<body>
    @{
        CoreLibraryContext db = new CoreLibraryContext();
        if (db.Database.CanConnect()) Console.WriteLine("YESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYESYES");
        else Console.WriteLine("NONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONONO");
    
    }

 <a asp-controller="Books" asp-action="Logout" class="logout_group"> 
<p id="logout_text">Вийти</p>
<img class="logout_img" src="/lib/layout-img/logout.png" />
 </a>


<div class="search_header">


    <div class="search_header_item" ></div>


    <div class="search_header_item"> 
     <a href="@Url.Action("Index","Books")"><img class="logo_group" src="/lib/layout-img/logo_group.png" /> </a>
    
    <div> 
    <!--SEARCH FROM. Contains filters (text input & dropdown lists) -->
    <form method="post" asp-controller="Books" asp-action="Index" style="display:flex;flex-direction:column; width:25%;">
    
    <div class="submit-input-group"> 
        <!--Search text input-->
        <input type="text" class="search_bar" placeholder="Введіть назву твору" name="parameter1" autocomplete="off" value=@ViewBag.SaveValSearch id="parameter1" />
        <input type="submit" id="submit_button" class="submit_button" value=""/>
        <!--Restore filters button-->     
        <img id="restore_filter" src="/lib/layout-img/circular-arrow.svg" onclick="RestoreFilters()" />    
    </div>

    <div class="dropdown_group">
     <!--DROPDOWN List for Rubrics. Saves chosen item after POST request-->
    <div class="arrow_for_select" id="arrow_for_select_1st"> 
    <select class="select-css" name="droppar_rubrics" id="droppar_rubrics">
        <option value="" selected disabled hidden>Обрати категорію</option>
                @{
                    int counter = 1;            
                    foreach (Rubric item in ViewBag.RubricsList)
                    {

                        if (ViewBag.SaveValRub==item.Id.ToString())
                        {
                            @Html.Raw("<option selected value="+@item.Id+">"+@item.RubricName+"</option>");
                        }
                        else @Html.Raw("<option value="+@item.Id+">"+@item.RubricName+"</option>");                      
            counter++;}}
</select>
</div>

<div class="arrow_for_select" id="arrow_for_select_2nd"> 
    <select name="droppar_authors" id="droppar_authors" class="select-css">
        <option value="" selected disabled hidden>Обрати автора</option>
                    @{
                        int counter_auth = 1;
                        foreach (Author item in ViewBag.AuthorList)
                        {
                            if (ViewBag.SaveValAuth == item.Id.ToString())
                            {
                                @Html.Raw("<option selected value="+@item.Id+">"+@item.AuthorName+"</option>");
                            }
                            else @Html.Raw("<option value="+@item.Id+">"+@item.AuthorName+"</option>");
                            
                            counter_auth++;
                        }
                    }
</select>
</div>
 </div>
 </form>
 </div>
 </div>

        @{
            /*Toggle element to choose day/night display theme*/
        }
        <div class="search_header_item">
            <div class="toggle_theme">
                <img id="moon" src="/lib/layout-img/inactive_moon.svg" />
                <div class="toggle_body" id="toggle_body">
                    <div class="toggle_ball" id="toggle_ball" onclick="ToggleTheme()"></div>
                </div>
                <img id="sun" src="/lib/layout-img/active_sun.svg" />
            </div>

        </div>
    </div>



    @{
        /*Main page body with search results*/
    }
    <div class="results_body"> 
         @await Html.PartialAsync("Sidebar")
        <div class="results_body_header">Лист доступної літератури. </div>

        @{
            string displayornotcreate = "";
            if (displayornot == "")
            {
                displayornotcreate = "align-self:flex-start;margin-left:21%;";
            }
            else { displayornotcreate = "display:none;"; }
        }

<a style="@displayornotcreate" class="edit_button" id="add_button" asp-action="Create">Додати книгу</a>

@{/*If there is nothing found according to user request - showing 404 message*/
    if (Model.Count()==0)
                {
                    @Html.Raw("<div class='error404' style='margin-top:80px;'>На жаль, за вашим запитом творів знайдено не було. </div>");
                    @Html.Raw("<div class='error404'>Спробуйте ще раз</div>");
                    @Html.Raw("<div class='error404' >404 :(</div>");
                }}


<div class="book_list_body"> 
            @{              
                foreach (var item in Model)
            {
             <div class="book_list_single_item">
             <div> 
             
                     @{/*Checking whether current book has an avatar. If false - show default image placeholder*/}
                     @{string image_address_html = "/lib/img/" + item.Id + ".png";
                     string image_address_tocheckexists = Directory.GetCurrentDirectory().ToString()+"\\wwwroot\\lib\\img\\"+item.Id+".png";
                     var exist = File.Exists(image_address_tocheckexists);
                     if (!exist) image_address_html = "/lib/img/notfound.png";}                            
                     @Html.Raw("<img class='book_image' src="+@image_address_html+">")
             </div>



            <div class="single_item_desc"> 
            <h1 style="margin:0; height:10%;"> @Html.DisplayFor(modelItem => item.BookName)</h1> 
            <h2 style="margin:0; height:15%; padding:5px 0 0 0"> @Html.DisplayFor(modelItem => item.BookAuthor.AuthorName) |   @Html.DisplayFor(modelItem => item.BookRubric.RubricName) </h2>
            <div style="margin:0; height:65%;" class="book_desc"> @Html.DisplayFor(modelItem => item.BookDescription) </div>
           
             

                            

              <div id="buttons_group" style="display:flex; flex-direction:row; margin-top:-20px;">
              <a style="@displayornot" asp-action="Edit" asp-route-id="@item.Id" class="edit_button" id="edit_button">Редагувати</a>      
              <a style="@displayornot" asp-action="Delete" asp-route-id="@item.Id" class="edit_button" id="delete_button">Видалити</a>
              </div>

              <div style="height:10%; display:flex; align-items:flex-end; justify-content:flex-end;">
              <a class="details_button" style="@margins" asp-action="Details" asp-route-id="@item.Id">Детальніше</a> 
              </div>             
             
              </div>
              </div>
        }
        }
</div>







</div>





<script src="/js/site.js"></script>
 </body>